@import './color-palette';

/**
 * theme-aware - Change color of a css property based on the currently active theme
 *
 * @param  {key}     CSS property
 * @param  {color}   Color name defined in the themes under _color-palette.scss
 *
 * @example - @include theme-aware('background', 'color-background');
 * @returns - background: #FFF;
 */
@mixin theme-aware($key, $color) {
	@each $theme-name, $theme-color in $themes {
		.theme-#{$theme-name} & {
			#{$key}: map-get(map-get($themes, $theme-name), $color);
		}
	}
}

@mixin theme-aware-both($palette, $key, $color) {
	@each $theme-name, $theme-color in $palette {
		.palette-#{$theme-name} & {
			#{$key}: map-get(map-get($palette, $theme-name), $color);
		}
	}
}

@mixin for-phone-only {
	@media (max-width: 599px) {
		@content;
	}
}
@mixin for-tablet-portrait-up {
	@media (min-width: 600px) {
		@content;
	}
}
@mixin for-tablet-landscape-up {
	@media (min-width: 900px) {
		@content;
	}
}
@mixin for-desktop-up {
	@media (min-width: 1200px) {
		@content;
	}
}
@mixin for-big-desktop-up {
	@media (min-width: 1800px) {
		@content;
	}
}

@mixin hideScrollbar {
	&::-webkit-scrollbar {
		width: 0 !important;
	}
	-ms-overflow-style: none;
	scrollbar-width: none;
}

@mixin no-select {
	-webkit-touch-callout: none;
	-webkit-user-select: none;
	-khtml-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
}
